% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Email.R
\name{EmailIterator}
\alias{EmailIterator}
\title{R6 Class allowing for easy distribution of an Email object to mailinglist.}
\description{
R6 Class allowing for easy distribution of an Email object to mailinglist.

R6 Class allowing for easy distribution of an Email object to mailinglist.
}
\details{
It let's you define a mailinglist, the email template itself and the connection and is
a helper object for working with the \code{blastula} package. While it inherits from
the Email class, an EmailIterator is intended to work with a template which defines
placeholders. The placeholders are then filled from the respective columns from
the mailinglist data.frame (e.g. person characteristics, qualtrics access codes, etc.)
}
\examples{
\dontrun{
template <- function(firstName, language, id) {
  body <- glue::glue("Hello {firstName}, your language is {language}")
  footer <- glue::glue("id = {id}")
  list(body = body, footer = footer)
}


ei <- EmailIterator$new(mailinglist = mailinglist)
ei$set_template(template)
ei$check_template()
ei$send_mails(subject = "test-mail")
}

}
\seealso{
\code{blastula} package
}
\section{Super class}{
\code{\link[qualtricks:Email]{qualtricks::Email}} -> \code{EmailIterator}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{mailinglist}}{A data.frame containing at least an \code{email} column
and other data to be provided in the template.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-EmailIterator-new}{\code{EmailIterator$new()}}
\item \href{#method-EmailIterator-validate}{\code{EmailIterator$validate()}}
\item \href{#method-EmailIterator-set_template}{\code{EmailIterator$set_template()}}
\item \href{#method-EmailIterator-check_template}{\code{EmailIterator$check_template()}}
\item \href{#method-EmailIterator-send_mails}{\code{EmailIterator$send_mails()}}
\item \href{#method-EmailIterator-clone}{\code{EmailIterator$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="qualtricks" data-topic="Email" data-id="print"><a href='../../qualtricks/html/Email.html#method-Email-print'><code>qualtricks::Email$print()</code></a></li>
<li><span class="pkg-link" data-pkg="qualtricks" data-topic="Email" data-id="send_mail"><a href='../../qualtricks/html/Email.html#method-Email-send_mail'><code>qualtricks::Email$send_mail()</code></a></li>
<li><span class="pkg-link" data-pkg="qualtricks" data-topic="Email" data-id="write_mail"><a href='../../qualtricks/html/Email.html#method-Email-write_mail'><code>qualtricks::Email$write_mail()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EmailIterator-new"></a>}}
\if{latex}{\out{\hypertarget{method-EmailIterator-new}{}}}
\subsection{Method \code{new()}}{
Create a new EmailIterator object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EmailIterator$new(mailinglist, user, sender, provider, host, port, use_ssl)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mailinglist}}{A data.frame containing at least an \code{email} column
and other data to be provided in the template. Consider \code{qualtRics::fetch_mailinglist}.}

\item{\code{user}}{Inherited from super \code{Email}}

\item{\code{sender}}{Inherited from super \code{Email}}

\item{\code{provider}}{Inherited from super \code{Email}}

\item{\code{host}}{Inherited from super \code{Email}}

\item{\code{port}}{Inherited from super \code{Email}}

\item{\code{use_ssl}}{Inherited from super \code{Email}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{EmailIterator} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EmailIterator-validate"></a>}}
\if{latex}{\out{\hypertarget{method-EmailIterator-validate}{}}}
\subsection{Method \code{validate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EmailIterator$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EmailIterator-set_template"></a>}}
\if{latex}{\out{\hypertarget{method-EmailIterator-set_template}{}}}
\subsection{Method \code{set_template()}}{
Sets the template. A template is a function with placeholders as parameters
to be filled from the mailinglist.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EmailIterator$set_template(fn)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fn}}{A function with placeholder as parameters to be filled from
the mailinglist. The function \code{fn} must return a named list which will be
passed as args to \code{blastula::compose_email}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EmailIterator-check_template"></a>}}
\if{latex}{\out{\hypertarget{method-EmailIterator-check_template}{}}}
\subsection{Method \code{check_template()}}{
Render the email in the Viewer to check its appearence. Will write to
private$email which then can be sent to individual adress if you set an
individual mail_adress...
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EmailIterator$check_template(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{args must correspond to \code{fn}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EmailIterator-send_mails"></a>}}
\if{latex}{\out{\hypertarget{method-EmailIterator-send_mails}{}}}
\subsection{Method \code{send_mails()}}{
Iterate over mailinglist and send mail to each recipient. Fills the
placeholder values in the template with matching columns from the
mailinglist.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EmailIterator$send_mails(subject)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{subject}}{The E-Mail's subject.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EmailIterator-clone"></a>}}
\if{latex}{\out{\hypertarget{method-EmailIterator-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EmailIterator$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
